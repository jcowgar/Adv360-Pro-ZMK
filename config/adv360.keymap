#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#include "chords.keymap"

#define DAG(keycode) &hold_prefer_##keycode 0 0
// Same, but dismisses sentence mode
#define str(s) #s
#define DISMISS_MACRO(key)                 \
macros {                                   \
  sentence_##key: sentence_##key {         \
    label = str(sentence_##key);           \
    compatible = "zmk,behavior-macro";     \
    #binding-cells = <0>;                  \
    tap-ms = <1>;                          \
    wait-ms = <1>;                         \
    bindings = <&to 0 &kp key>;        \
  };                                       \
  lg_sentence_##key: lg_sentence_##key {   \
    label = str(lg_sentence_##key);        \
    compatible = "zmk,behavior-macro";     \
    #binding-cells = <0>;                  \
    tap-ms = <1>;                          \
    wait-ms = <1>;                         \
    bindings = <&to 0 &kp LG(key)>;    \
  };                                       \
};                                         \
behaviors {                                \
  hold_prefer_##key: hold_prefer_##key {   \
    compatible = "zmk,behavior-hold-tap";  \
    label = str(hold_prefer_##key);        \
    #binding-cells = <2>;                  \
    tapping_term_ms = <200>;               \
    quick_tap_ms = <0>;                    \
    flavor = "tap-preferred";              \
    bindings = <&lg_sentence_##key>, <&sentence_##key>;  \
  };                                       \
};
/ {
  DISMISS_MACRO(A)
  DISMISS_MACRO(B)
  DISMISS_MACRO(C)
  DISMISS_MACRO(D)
  DISMISS_MACRO(E)
  DISMISS_MACRO(F)
  DISMISS_MACRO(G)
  DISMISS_MACRO(H)
  DISMISS_MACRO(I)
  DISMISS_MACRO(J)
  DISMISS_MACRO(K)
  DISMISS_MACRO(L)
  DISMISS_MACRO(M)
  DISMISS_MACRO(N)
  DISMISS_MACRO(O)
  DISMISS_MACRO(P)
  DISMISS_MACRO(Q)
  DISMISS_MACRO(R)
  DISMISS_MACRO(S)
  DISMISS_MACRO(T)
  DISMISS_MACRO(U)
  DISMISS_MACRO(V)
  DISMISS_MACRO(W)
  DISMISS_MACRO(X)
  DISMISS_MACRO(Y)
  DISMISS_MACRO(Z)
  DISMISS_MACRO(RET)
};

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp EQUAL     &kp N1        &kp N2    &kp N3     &kp N4     &kp N5                     &tog 1      &mo 3     &kp N6        &kp N7     &kp N8     &kp N9         &kp N0  &kp MINUS
        &kp TAB      &kp Q         &kp W     &kp F      &kp P      &kp G                      &none      &none      &kp J         &kp L      &kp U      &kp Y  &kp SEMICOLON   &kp BSLH
        &kp ESC      &kp A         &kp R     &kp S      &kp T      &kp D                      &none  &kp LCTRL   &kp LALT                            &kp RALT      &kp RCTRL      &none     &kp H   &kp N      &kp E    &kp I     DAG(O)          &kp SQT
 &kp LEFT_SHIFT      &kp Z         &kp X     DAG(C)      &kp V      &kp B                      &none      &none   &kp HOME         &none      &none  &kp PG_UP          &none      &none     &kp K   DAG(M)  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
          &mo 2  &kp GRAVE  &kp LEFT_WIN  &kp LEFT  &kp RIGHT  &kp SPACE            &lt 2 BACKSPACE    &kp END  &kp PG_DN  &lt 1 DELETE  &kp ENTER   &kp DOWN         &kp UP   &kp LBKT  &kp RBKT   &mo 2
            >;
        };

        layer_syms {
            bindings = <
 &trans         &trans       &trans            &trans             &trans     &trans            &trans  &trans        &trans     &kp KP_NUM  &kp KP_EQUAL    &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
 &trans  &kp BACKSLASH  &kp PERCENT         &kp SLASH       &kp ASTERISK   &kp PLUS             &none   &none  &kp QUESTION  &kp AMPERSAND      &kp PIPE  &kp EXCLAMATION            &none     &trans
 &trans    &kp AT_SIGN    &kp COLON    &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp EQUAL             &none  &trans        &trans                                        &trans           &trans      &none  &kp HASH  &kp UNDERSCORE  &kp MINUS  &kp TILDE   &none  &trans
 &trans      &kp CARET        &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS             &none   &none        &trans          &none         &none           &trans            &none      &none     &none           &none      &none      &none   &none  &trans
 &trans         &trans       &trans            &trans             &trans     &trans            &trans  &trans        &trans         &trans        &trans           &trans           &trans     &trans    &trans          &trans
            >;
        };

        layer_nav {
            bindings = <
 &kp F11            &kp F1        &kp F2        &kp F3          &kp F4  &kp F5            &trans  &trans  &kp F6    &kp F7  &kp F8   &kp F9  &kp F10  &kp F12
  &trans            &trans        &trans        &trans          &trans  &trans             &none   &none  &trans  &kp HOME  &kp UP  &kp END   &trans   &trans
  &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &kp LEFT_SHIFT  &trans             &none  &trans  &trans                     &trans   &trans    &none    &kp PAGE_UP  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
  &trans            &trans        &trans        &trans          &trans  &trans             &none   &none  &trans     &none   &none   &trans    &none    &none  &kp PAGE_DOWN    &trans    &trans     &trans  &trans  &trans
  &trans            &trans        &trans        &trans          &trans  &trans            &trans  &trans  &trans    &trans  &trans   &trans   &trans   &trans         &trans    &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
