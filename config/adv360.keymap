#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        kesc: kesc {
            compatible = "zmk,behavior-tap-dance";
            label = "KESC";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp ESCAPE>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            hold-while-undecided;
            hold-while-undecided-linger;
        };
    };

    combos {
        compatible = "zmk,combos";

        lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <41 42>;
        };

        rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <42 43>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 30>;
        };

        lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <55 56>;
        };

        rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <57 56>;
        };

        gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <50 49>;
        };

        lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <49 48>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <55 42>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <41 54>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            bindings = <
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5  &none                                                                           &none       &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W     &kp F     &kp P      &kp B   &tog 2                                                                          &none       &kp J   &kp L      &kp U      &kp Y     &kp SQT   &kp BSLH
&kp ESC    &kp A   &kp R     &kp S     &kp T      &kp G   &mo 2        &kp TAB                   &none      &none  &kp ESCAPE             &caps_word  &kp M   &kp N      &kp E      &kp I     &kp O     &kp SQT
&none      &kp Z   &kp X     &kp C     &kp D      &kp V                                          &none      &none                                     &kp K   &kp H      &kp COMMA  &kp DOT   &kp FSLH  &none
&none      &none   &kp LGUI  &kp LALT  &kp LCTRL          &lt 1 SPACE  &hm LEFT_SHIFT BACKSPACE  &none      &none  &hm LEFT_SHIFT DELETE  &kp RET             &kp LCTRL  &kp LALT   &kp LGUI  &none     &none
            >;
        };

        Navigation {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3            &kp F4          &kp F5  &kp F11                                      &kp F12  &kp F6         &kp F7              &kp F8          &kp F9               &kp F10  &trans
&trans  &trans        &trans        &trans            &trans          &trans  &trans                                       &trans   &trans         &kp HOME            &kp UP_ARROW    &kp END              &trans   &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans   &trans  &trans      &trans  &trans  &trans   &kp PAGE_UP    &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &trans   &trans
&trans  &trans        &trans        &trans            &trans          &trans                   &trans      &trans                   &kp PAGE_DOWN  &kp LC(LEFT_ARROW)  &trans          &kp LC(RIGHT_ARROW)  &trans   &trans
&trans  &trans        &trans        &trans            &trans                  &trans   &trans  &trans      &trans  &trans  &trans                  &trans              &trans          &trans               &trans   &trans
            >;
        };

        Keypad {
            bindings = <
&none  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5  &kp F11                                    &kp F12  &kp F6           &kp F7     &kp F8        &kp F9      &kp F10         &none
&none  &none     &none     &none      &none      &none   &none                                      &none    &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8     &kp KP_N9   &kp UNDERSCORE  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none   &none    &trans  &none      &none  &trans  &none    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5     &kp KP_N6   &kp KP_PLUS     &none
&none  &none     &none     &none      &none      &none                    &none      &none                   &kp KP_N0        &kp KP_N1  &kp KP_N2     &kp KP_N3   &kp KP_MINUS    &none
&none  &none     &trans    &trans     &trans             &trans   &trans  &none      &none  &trans  &trans                    &kp EQUAL  &kp KP_COMMA  &kp KP_DOT  &none           &none
            >;
        };
    };
};
