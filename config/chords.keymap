#define COMBO(name, keypress, keypos) \
combo_##name {                        \
  timeout-ms = <60>;                  \
  bindings = <keypress>;              \
  key-positions = <keypos>;           \
};

#define LAYER_CHORD(name, keypress, keypos, lays) \
chord_##name {                                    \
  timeout-ms = <60>;                              \
  bindings = <keypress>;                          \
  key-positions = <keypos>;                       \
  layers = <lays>;                                \
};

#define CHORD(name, keypress, keypos) \
  LAYER_CHORD(name, keypress, keypos, 0)

#define MACRO(name, keys)             \
name: name##_macro {                  \
  label = #name;                      \
  compatible = "zmk,behavior-macro";  \
  #binding-cells = <0>;               \
  tap-ms = <1>;                       \
  wait-ms = <1>;                      \
  bindings = <keys>;                  \
};

#define CHMAC(name, keys)             \
name: name##_macro {                  \
  label = #name;                      \
  compatible = "zmk,behavior-macro";  \
  #binding-cells = <0>;               \
  tap-ms = <1>;                       \
  wait-ms = <1>;                      \
  bindings = <keys>, <&to 0>;  \
};

/ {
	combos {
		compatible = "zmk,combos";
		CHORD(ch_these, &ch_these, 32 40 42 31)
		CHORD(ch_thought, &ch_thought, 32 40 44 24)
		CHORD(ch_night, &ch_night, 41 19 40 32)
		CHORD(ch_are, &ch_are, 29 30 42)
		CHORD(ch_avenue, &ch_avenue, 29 50 42)
		CHORD(ch_could, &ch_could, 49 23 33)
		CHORD(ch_did, &ch_did, 33 43 33)
		CHORD(ch_found, &ch_found, 17 44 41 33)
		CHORD(ch_find, &ch_find, 17 41 33)
		CHORD(ch_good, &ch_good, 19 44 33)
		CHORD(ch_got, &ch_got, 19 44 32)
		CHORD(ch_had, &ch_had, 40 29 33)
		CHORD(ch_have, &ch_have, 40 29 50)
		CHORD(ch_need, &ch_need, 41 42 33)
		CHORD(ch_not, &ch_not, 41 44 32)
		CHORD(ch_public, &ch_public, 18 24 51)
		CHORD(ch_ran, &ch_ran, 30 29 41)
		CHORD(ch_run, &ch_run, 30 24 41)
		CHORD(ch_said, &ch_said, 31 29 43 33)
		CHORD(ch_say, &ch_say, 31 29 25)
		CHORD(ch_some, &ch_some, 31 44 61)
		CHORD(ch_string, &ch_string, 31 32 30)
		CHORD(ch_that, &ch_that, 32 40 29)
		CHORD(ch_the, &ch_the, 32 40 42)
		CHORD(ch_though, &ch_though, 32 40 44)
		CHORD(ch_threw, &ch_threw, 32 40 16)
		CHORD(ch_thank, &ch_thank, 32 41 60)
		CHORD(ch_when, &ch_when, 16 40 42)
		CHORD(ch_what, &ch_what, 16 40 32)
		CHORD(ch_why, &ch_why, 16 40 25)
		CHORD(ch_would, &ch_would, 16 23 33)
		CHORD(ch_what, &ch_what, 16 40)
		CHORD(ch_you, &ch_you, 25 24)
		CHORD(ch_to, &ch_to, 32 44)
		CHORD(ch_have, &ch_have, 40 50)
		CHORD(ch_up, &ch_up, 24 18)
		CHORD(ch_we, &ch_we, 16 42)
		CHORD(ch_state, &ch_state, 31 32)
		CHORD(ch_road, &ch_road, 30 33)
		CHORD(ch_qwerty, &ch_qwerty, 15 16)
		CHORD(ch_go, &ch_go, 19 44)
		CHORD(ch_at, &ch_at, 29 32)
		CHORD(ch_as, &ch_as, 29 31)
		CHORD(ch_because, &ch_because, 51 49)
		CHORD(ch_do, &ch_do, 33 44)
		CHORD(ch_people, &ch_people, 18 23)
		CHORD(ch_ten, &ch_ten, 1 12)
		CHORD(ch_twelve, &ch_twelve, 1 2)
		CHORD(ch_thirteen, &ch_thirteen, 1 3)
		CHORD(ch_fourteen, &ch_fourteen, 1 4)
		CHORD(ch_fifteen, &ch_fifteen, 1 5)
		CHORD(ch_sixteen, &ch_sixteen, 1 8)
		CHORD(ch_seventeen, &ch_seventeen, 1 9)
		CHORD(ch_eighteen, &ch_eighteen, 1 10)
		CHORD(ch_nineteen, &ch_nineteen, 1 11)
		CHORD(ch_twenty, &ch_twenty, 2 12)
	};
};

/ {
	macros {
		CHMAC(ch_these, &kp T &kp H &kp E &kp S &kp E &kp SPC)
		CHMAC(ch_thought, &kp T &kp H &kp O &kp U &kp G &kp H &kp T &kp SPC)
		CHMAC(ch_night, &kp N &kp I &kp G &kp H &kp T &kp SPC)
		CHMAC(ch_are, &kp A &kp R &kp E &kp SPC)
		CHMAC(ch_avenue, &kp A &kp V &kp E &kp N &kp U &kp E &kp SPC)
		CHMAC(ch_could, &kp C &kp O &kp U &kp L &kp D &kp SPC)
		CHMAC(ch_did, &kp D &kp I &kp D &kp SPC)
		CHMAC(ch_found, &kp F &kp O &kp U &kp N &kp D &kp SPC)
		CHMAC(ch_find, &kp F &kp I &kp N &kp D &kp SPC)
		CHMAC(ch_good, &kp G &kp O &kp O &kp D &kp SPC)
		CHMAC(ch_got, &kp G &kp O &kp T &kp SPC)
		CHMAC(ch_had, &kp H &kp A &kp D &kp SPC)
		CHMAC(ch_have, &kp H &kp A &kp V &kp E &kp SPC)
		CHMAC(ch_need, &kp N &kp E &kp E &kp D &kp SPC)
		CHMAC(ch_not, &kp N &kp O &kp T &kp SPC)
		CHMAC(ch_public, &kp P &kp U &kp B &kp L &kp I &kp C &kp SPC)
		CHMAC(ch_ran, &kp R &kp A &kp N &kp SPC)
		CHMAC(ch_run, &kp R &kp U &kp N &kp SPC)
		CHMAC(ch_said, &kp S &kp A &kp I &kp D &kp SPC)
		CHMAC(ch_say, &kp S &kp A &kp Y &kp SPC)
		CHMAC(ch_some, &kp S &kp O &kp M &kp E &kp SPC)
		CHMAC(ch_string, &kp S &kp T &kp R &kp I &kp N &kp G &kp SPC)
		CHMAC(ch_that, &kp T &kp H &kp A &kp T &kp SPC)
		CHMAC(ch_the, &kp T &kp H &kp E &kp SPC)
		CHMAC(ch_though, &kp T &kp H &kp O &kp U &kp G &kp H &kp SPC)
		CHMAC(ch_threw, &kp T &kp H &kp R &kp E &kp W &kp SPC)
		CHMAC(ch_thank, &kp T &kp H &kp A &kp N &kp K &kp SPC)
		CHMAC(ch_when, &kp W &kp H &kp E &kp N &kp SPC)
		CHMAC(ch_what, &kp W &kp H &kp A &kp T &kp SPC)
		CHMAC(ch_why, &kp W &kp H &kp Y &kp SPC)
		CHMAC(ch_would, &kp W &kp O &kp U &kp L &kp D &kp SPC)
		CHMAC(ch_what, &kp W &kp H &kp A &kp T &kp SPC)
		CHMAC(ch_you, &kp Y &kp O &kp U &kp SPC)
		CHMAC(ch_to, &kp T &kp O &kp SPC)
		CHMAC(ch_have, &kp H &kp A &kp V &kp E &kp SPC)
		CHMAC(ch_up, &kp U &kp P &kp SPC)
		CHMAC(ch_we, &kp W &kp E &kp SPC)
		CHMAC(ch_state, &kp S &kp T &kp A &kp T &kp E &kp SPC)
		CHMAC(ch_road, &kp R &kp O &kp A &kp D &kp SPC)
		CHMAC(ch_qwerty, &kp Q &kp W &kp E &kp R &kp T &kp Y &kp SPC)
		CHMAC(ch_go, &kp G &kp O &kp SPC)
		CHMAC(ch_at, &kp A &kp T &kp SPC)
		CHMAC(ch_as, &kp A &kp S &kp SPC)
		CHMAC(ch_because, &kp B &kp E &kp C &kp A &kp U &kp S &kp E &kp SPC)
		CHMAC(ch_do, &kp D &kp O &kp SPC)
		CHMAC(ch_people, &kp P &kp E &kp O &kp P &kp L &kp E &kp SPC)
		CHMAC(ch_ten, &kp T &kp E &kp N &kp SPC)
		CHMAC(ch_twelve, &kp T &kp W &kp E &kp L &kp V &kp E &kp SPC)
		CHMAC(ch_thirteen, &kp T &kp H &kp I &kp R &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_fourteen, &kp F &kp O &kp U &kp R &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_fifteen, &kp F &kp I &kp F &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_sixteen, &kp S &kp I &kp X &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_seventeen, &kp S &kp E &kp V &kp E &kp N &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_eighteen, &kp E &kp I &kp G &kp H &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_nineteen, &kp N &kp I &kp N &kp E &kp T &kp E &kp E &kp N &kp SPC)
		CHMAC(ch_twenty, &kp T &kp W &kp E &kp N &kp T &kp Y &kp SPC)
	};
};

